name: Full Security Scan (Test Mode)

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  security-events: write

jobs:
  security-scan:
    name: Test Security Tools Locally (No SARIF Upload)
    runs-on: ubuntu-latest

    steps:
      # --------------------------------------------
      # üì¶ Checkout Code
      # --------------------------------------------
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # --------------------------------------------
      # üîê TruffleHog (Secrets)
      # --------------------------------------------
      - name: Run TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          scanArguments: .

      # --------------------------------------------
      # üîê Gitleaks (Secrets)
      # --------------------------------------------
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v3
        with:
          scan-mode: all
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # --------------------------------------------
      # üß† CodeQL Static Code Analysis
      # --------------------------------------------
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript  # Change to python, java, etc. if needed

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      # --------------------------------------------
      # üï∑Ô∏è OWASP ZAP (Public Web Scan)
      # --------------------------------------------
      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.10.0
        with:
          target: 'https://juice-shop.herokuapp.com'
          fail_action: false
          cmd_options: '-config replacer.full_list(0).enabled=false'

      # --------------------------------------------
      # üê≥ Build Docker Image
      # --------------------------------------------
      - name: Build Docker Image
        run: |
          docker build -t myapp-image .

      # --------------------------------------------
      # üê≥ Trivy - Docker Image & Dependency Scan
      # --------------------------------------------
      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install wget -y
          wget https://github.com/aquasecurity/trivy/releases/latest/download/trivy_0.50.1_Linux-64bit.deb
          sudo dpkg -i trivy_0.50.1_Linux-64bit.deb

      - name: Run Trivy image scan
        run: |
          trivy image myapp-image \
            --scanners vuln,secret,config

      # --------------------------------------------
      # üì¶ GitHub Dependency Review
      # --------------------------------------------
      - name: Dependency Review
        if: github.event_name == 'pull_request'
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: high
        continue-on-error: true
