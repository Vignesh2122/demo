name: Secure CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  actions: read
  packages: read
  issues: write

jobs:
  security-checks:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create report directory
        run: mkdir -p security-reports

      # --- Dependency Review (GitHub-native) ---
      - name: Dependency Review
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: high
        continue-on-error: true

      # --- CodeQL Analysis ---
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      # --- Docker Build ---
      - name: Build Docker Image
        run: docker build -t secure-app:latest .

      # --- Trivy Scan (JSON + HTML) ---
      - name: Run Trivy Scan
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -
          ./trivy image --format json -o security-reports/trivy.json secure-app:latest || true
          ./trivy image --format template --template "@contrib/html.tpl" \
            -o security-reports/trivy-report.html secure-app:latest || true
          ls -lh security-reports/

      # --- TruffleHog Secrets Scan ---
      - name: Run TruffleHog Scan
        run: |
          pip install trufflehog
          trufflehog git file://. --json > security-reports/trufflehog.json || true

      # --- Generate Issue Markdown from Reports ---
      - name: Generate Issue Body
        run: |
          echo "## 🔐 Security Scan Report – Run #${{ github.run_number }}" > issue-body.md
          echo "" >> issue-body.md

          if [ -f security-reports/trivy.json ]; then
            echo "### 🐳 Docker Vulnerabilities (Trivy)" >> issue-body.md
            jq -r '
              .Results[]? 
              | select(.Vulnerabilities != null) 
              | .Vulnerabilities[] 
              | "- **\(.Severity)**: \(.PkgName) – \(.VulnerabilityID): \(.Title)"' \
              security-reports/trivy.json >> issue-body.md || echo "No Trivy issues found." >> issue-body.md
          else
            echo "- Trivy report missing." >> issue-body.md
          fi

          echo "" >> issue-body.md

          if [ -f security-reports/trufflehog.json ]; then
            echo "### 🔑 Secrets Detected (TruffleHog)" >> issue-body.md
            jq -r '
              .[]? 
              | select(.SourceMetadata? != null) 
              | "- \(.DetectorName): found in \(.SourceMetadata.Data.Filename // "unknown")"' \
              security-reports/trufflehog.json >> issue-body.md || echo "No secrets found." >> issue-body.md
          else
            echo "- TruffleHog report missing." >> issue-body.md
          fi

          echo "" >> issue-body.md
          echo "_Full HTML vulnerability report is attached as artifact._" >> issue-body.md

      # --- Create GitHub Issue from Markdown ---
      - name: Create GitHub Issue
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: "🔐 Security Scan Report - Run #${{ github.run_number }}"
          content-filepath: issue-body.md
          labels: security, automated-scan

      # --- Upload All Reports as Artifact ---
      - name: Upload Security Reports
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-reports
          path: security-reports/
